{"_id":"msgpack-js","_rev":"21-539ca04f0da7b8f7cac09b42cf6e8467","name":"msgpack-js","description":"msgpack encoder and decoder in pure javascript","dist-tags":{"latest":"0.3.0"},"versions":{"0.1.0":{"author":{"name":"Tim Caswell","email":"tim@creationix.com"},"name":"msgpack-js","description":"msgpack encoder and decoder in pure node js","version":"0.1.0","repository":{"type":"git","url":"git://github.com/creationix/msgpack.git"},"main":"msgpack.js","engines":{"node":">=0.6.0"},"dependencies":{},"devDependencies":{},"optionalDependencies":{},"readme":"","_id":"msgpack-js@0.1.0","dist":{"shasum":"5c4974b9cb930bacdda9385b12a5e7cbadeac6df","tarball":"http://registry.npmjs.org/msgpack-js/-/msgpack-js-0.1.0.tgz"},"maintainers":[{"name":"creationix","email":"tim@creationix.com"}],"directories":{}},"0.1.1":{"author":{"name":"Tim Caswell","email":"tim@creationix.com"},"name":"msgpack-js","description":"msgpack encoder and decoder in pure node js","version":"0.1.1","repository":{"type":"git","url":"git://github.com/creationix/msgpack-js.git"},"main":"msgpack.js","engines":{"node":">=0.6.0"},"dependencies":{},"devDependencies":{},"optionalDependencies":{},"readme":"","_id":"msgpack-js@0.1.1","dist":{"shasum":"b10505d534400d5bc7645bee37ec6bcbb82f2dcf","tarball":"http://registry.npmjs.org/msgpack-js/-/msgpack-js-0.1.1.tgz"},"maintainers":[{"name":"creationix","email":"tim@creationix.com"}],"directories":{}},"0.1.4":{"name":"msgpack-js","version":"0.1.4","description":"A msgpack encoder and decoder using ArrayBuffer and DataView","main":"msgpack.js","licenses":[{"type":"MIT","url":"http://www.opensource.org/licenses/mit-license.php"}],"repositories":[{"type":"git","url":"http://github.com/creationix/msgpack-js-browser.git"}],"github":"http://github.com/creationix/msgpack-js-browser","readme":"# msgpack for the browser\n\n[![Build Status](https://secure.travis-ci.org/creationix/msgpack-js-browser.png)](http://travis-ci.org/creationix/msgpack-js-browser)\n\nA handwritten msgpack encoder and decoder for Browsers\n\nThis is a browser port of https://github.com/creationix/msgpack-js\n\nThe original format can be found at <http://wiki.msgpack.org/display/MSGPACK/Format+specification>\n\n## Extension\n\nI've extended the format a little to allow for encoding and decoding of `undefined` and `ArrayBuffer` instances.\n\nThis required three new type codes that were previously marked as \"reserved\".\nThis change means that using these new types will render your serialized data\nincompatible with other messagepack implementations that don't have the same\nextension.\n\nThere are two new types for storing browser `ArrayBuffer` instances. These work just \nlike \"raw 16\" and \"raw 32\" except they are binary buffers instead of strings.\n\n    buffer 16  11011000  0xd8\n    buffer 32  11011001  0xd9\n\nAlso I've added a type for `undefined` that works just like the `null` type.\n\n    undefined  11000100  0xc4\n\n## Usage\n\n``` javascript\nrequire(['msgpack'], function (msgpack) {\n\n  var initial = {Hello: \"World\"};\n  var encoded = msgpack.encode(initial);\n  var decoded = msgpack.decode(encoded);\n\n});\n```\n\n","readmeFilename":"README.md","_id":"msgpack-js@0.1.4","dist":{"shasum":"44d3c11f1a2526713d288fdd61e0475f113fc3e8","tarball":"http://registry.npmjs.org/msgpack-js/-/msgpack-js-0.1.4.tgz"},"_from":".","_npmVersion":"1.2.11","_npmUser":{"name":"creationix","email":"tim@creationix.com"},"maintainers":[{"name":"creationix","email":"tim@creationix.com"}],"directories":{}},"0.1.5":{"author":{"name":"Tim Caswell","email":"tim@creationix.com"},"name":"msgpack-js","description":"msgpack encoder and decoder in pure node js","version":"0.1.5","repository":{"type":"git","url":"git://github.com/creationix/msgpack-js.git"},"main":"msgpack.js","engines":{"node":">=0.6.0"},"dependencies":{},"devDependencies":{},"optionalDependencies":{},"readme":"# msgpack for node\n\n[![Build Status](https://secure.travis-ci.org/creationix/msgpack-js.png)](http://travis-ci.org/creationix/msgpack-js)\n\nA handwritten msgpack encoder and decoder for Node.JS.\n\nThe original format can be found at <http://wiki.msgpack.org/display/MSGPACK/Format+specification>\n\n\n## Extension\n\nI've extended the format a little to allow for encoding and decoding of `undefined` and `Buffer` instances.\n\nThis required three new type codes that were previously marked as \"reserved\".\nThis change means that using these new types will render your serialized data\nincompatible with other messagepack implementations that don't have the same\nextension.\n\nThere are two new types for storing node `Buffer` instances. These work just \nlike \"raw 16\" and \"raw 32\" except they are node buffers instead of strings.\n\n    buffer 16  11011000  0xd8\n    buffer 32  11011001  0xd9\n\nAlso I've added a type for `undefined` that works just like the `null` type.\n\n    undefined  11000100  0xc4\n\n## Usage\n\n``` javascript\nvar msgpack = require('msgpack');\nvar assert = require('assert');\n\nvar initial = {Hello: \"World\"};\nvar encoded = msgpack.encode(initial);\nvar decoded = msgpack.decode(encoded);\n\nassert.deepEqual(initial, decoded);\n```\n\n","readmeFilename":"README.markdown","_id":"msgpack-js@0.1.5","dist":{"shasum":"7c163b654cec6b66d6df4652adaa158716cb9567","tarball":"http://registry.npmjs.org/msgpack-js/-/msgpack-js-0.1.5.tgz"},"_from":".","_npmVersion":"1.2.11","_npmUser":{"name":"creationix","email":"tim@creationix.com"},"maintainers":[{"name":"creationix","email":"tim@creationix.com"}],"directories":{}},"0.2.0":{"author":{"name":"Tim Caswell","email":"tim@creationix.com"},"name":"msgpack-js","description":"msgpack encoder and decoder in pure javascript","version":"0.2.0","repository":{"type":"git","url":"git://github.com/creationix/msgpack-js.git"},"main":"msgpack.js","dependencies":{"bops":"~0.0.5"},"readme":"# msgpack for node\n\n[![Build Status](https://secure.travis-ci.org/creationix/msgpack-js.png)](http://travis-ci.org/creationix/msgpack-js)\n\nA handwritten msgpack encoder and decoder for Node.JS and modern browsers.\n\nThe original format can be found at <http://wiki.msgpack.org/display/MSGPACK/Format+specification>\n\n\n## Extension\n\nI've extended the format a little to allow for encoding and decoding of `undefined` and `Buffer` instances.\n\nThis required three new type codes that were previously marked as \"reserved\".\nThis change means that using these new types will render your serialized data\nincompatible with other messagepack implementations that don't have the same\nextension.\n\nThere are two new types for storing node `Buffer` instances. These work just \nlike \"raw 16\" and \"raw 32\" except they are node buffers instead of strings.\n\n    buffer 16  11011000  0xd8\n    buffer 32  11011001  0xd9\n\nAlso I've added a type for `undefined` that works just like the `null` type.\n\n    undefined  11000100  0xc4\n\n## Usage\n\n``` javascript\nvar msgpack = require('msgpack');\nvar assert = require('assert');\n\nvar initial = {Hello: \"World\"};\nvar encoded = msgpack.encode(initial);\nvar decoded = msgpack.decode(encoded);\n\nassert.deepEqual(initial, decoded);\n```\n\n","readmeFilename":"README.markdown","_id":"msgpack-js@0.2.0","dist":{"shasum":"434b38c7dffac7c3b888262126c84732210b8a60","tarball":"http://registry.npmjs.org/msgpack-js/-/msgpack-js-0.2.0.tgz"},"_from":".","_npmVersion":"1.2.18","_npmUser":{"name":"creationix","email":"tim@creationix.com"},"maintainers":[{"name":"creationix","email":"tim@creationix.com"}],"directories":{}},"0.2.1":{"author":{"name":"Tim Caswell","email":"tim@creationix.com"},"name":"msgpack-js","description":"msgpack encoder and decoder in pure javascript","version":"0.2.1","repository":{"type":"git","url":"git://github.com/creationix/msgpack-js.git"},"scripts":{"test":"node test.js"},"testling":{"files":"test.js","browsers":["ie/9..latest","firefox/19..latest","chrome/25..latest","safari/latest","iphone/6","ipad/6"]},"main":"msgpack.js","dependencies":{"bops":"~0.0.6"},"devDependencies":{"tape":"~1.0.2"},"readme":"# msgpack for node\n\n[![node support](https://travis-ci.org/creationix/msgpack-js.png)](https://travis-ci.org/creationix/msgpack-js)\n\n[![browser support](https://ci.testling.com/creationix/msgpack-js.png)](https://ci.testling.com/creationix/msgpack-js)\n\n\nA handwritten msgpack encoder and decoder for Node.JS and modern browsers.\n\nThe original format can be found at <http://wiki.msgpack.org/display/MSGPACK/Format+specification>\n\n\n## Extension\n\nI've extended the format a little to allow for encoding and decoding of `undefined` and `Buffer` instances.\n\nThis required three new type codes that were previously marked as \"reserved\".\nThis change means that using these new types will render your serialized data\nincompatible with other messagepack implementations that don't have the same\nextension.\n\nThere are two new types for storing node `Buffer` instances. These work just \nlike \"raw 16\" and \"raw 32\" except they are node buffers instead of strings.\n\n    buffer 16  11011000  0xd8\n    buffer 32  11011001  0xd9\n\nAlso I've added a type for `undefined` that works just like the `null` type.\n\n    undefined  11000100  0xc4\n\n## Usage\n\n``` javascript\nvar msgpack = require('msgpack');\nvar assert = require('assert');\n\nvar initial = {Hello: \"World\"};\nvar encoded = msgpack.encode(initial);\nvar decoded = msgpack.decode(encoded);\n\nassert.deepEqual(initial, decoded);\n```\n\n","readmeFilename":"README.markdown","_id":"msgpack-js@0.2.1","dist":{"shasum":"845935c523cf36ff826c8f8b835771296ca745a8","tarball":"http://registry.npmjs.org/msgpack-js/-/msgpack-js-0.2.1.tgz"},"_from":".","_npmVersion":"1.2.18","_npmUser":{"name":"creationix","email":"tim@creationix.com"},"maintainers":[{"name":"creationix","email":"tim@creationix.com"}],"directories":{}},"0.3.0":{"author":{"name":"Tim Caswell","email":"tim@creationix.com"},"name":"msgpack-js","description":"msgpack encoder and decoder in pure javascript","version":"0.3.0","repository":{"type":"git","url":"git://github.com/creationix/msgpack-js.git"},"main":"msgpack.js","dependencies":{"bops":"~0.0.6"},"devDependencies":{"tape":"~1.0.2"},"scripts":{"test":"node test.js"},"testling":{"files":"test.js","browsers":["ie/9..latest","firefox/19..latest","chrome/25..latest","safari/latest","iphone/6","ipad/6"]},"readme":"# msgpack for JavaScript\n\n[![node support](https://travis-ci.org/creationix/msgpack-js.png)](https://travis-ci.org/creationix/msgpack-js)\n\n[![browser support](https://ci.testling.com/creationix/msgpack-js.png)](https://ci.testling.com/creationix/msgpack-js)\n\n\nA handwritten msgpack encoder and decoder for Node.JS and modern browsers.\n\nThe original format can be found at <http://wiki.msgpack.org/display/MSGPACK/Format+specification>\n\n\n## Extension\n\nI've extended the format a little to allow for encoding and decoding of `undefined` and `Buffer` instances.\n\nThis required three new type codes that were previously marked as \"reserved\".\nThis change means that using these new types will render your serialized data\nincompatible with other messagepack implementations that don't have the same\nextension.\n\nThere are two new types for storing node `Buffer` instances. These work just \nlike \"raw 16\" and \"raw 32\" except they are node buffers instead of strings.\n\n    buffer 16  11011000  0xd8\n    buffer 32  11011001  0xd9\n\nAlso I've added a type for `undefined` that works just like the `null` type.\n\n    undefined  11000100  0xc4\n\n## Usage\n\n``` javascript\nvar msgpack = require('msgpack');\nvar assert = require('assert');\n\nvar initial = {Hello: \"World\"};\nvar encoded = msgpack.encode(initial);\nvar decoded = msgpack.decode(encoded);\n\nassert.deepEqual(initial, decoded);\n```\n\n","readmeFilename":"README.markdown","bugs":{"url":"https://github.com/creationix/msgpack-js/issues"},"_id":"msgpack-js@0.3.0","dist":{"shasum":"030ec08c5956f9ca7d17d40a572d5396fec10923","tarball":"http://registry.npmjs.org/msgpack-js/-/msgpack-js-0.3.0.tgz"},"_from":".","_npmVersion":"1.2.32","_npmUser":{"name":"creationix","email":"tim@creationix.com"},"maintainers":[{"name":"creationix","email":"tim@creationix.com"}],"directories":{}}},"readme":"","maintainers":[{"name":"creationix","email":"tim@creationix.com"}],"time":{"modified":"2013-07-22T15:26:26.866Z","created":"2012-06-25T18:41:04.684Z","0.1.0":"2012-06-25T18:41:05.479Z","0.1.1":"2012-07-14T21:27:51.206Z","0.1.4":"2013-02-25T19:43:14.850Z","0.1.5":"2013-02-25T21:27:24.950Z","0.2.0":"2013-05-20T21:17:20.926Z","0.2.1":"2013-05-20T22:05:54.632Z","0.3.0":"2013-07-22T15:26:26.866Z"},"author":{"name":"Tim Caswell","email":"tim@creationix.com"},"repository":{"type":"git","url":"git://github.com/creationix/msgpack-js.git"},"users":{"syzer":true,"monolithed":true},"_attachments":{},"_etag":"\"7MG264SWX89KX4P96VRN0EST6\""}