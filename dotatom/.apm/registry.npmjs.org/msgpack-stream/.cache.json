{"_id":"msgpack-stream","_rev":"25-b3743848501d12bc47a5c2361a613c82","name":"msgpack-stream","description":"Stream of msgpack protocol","dist-tags":{"latest":"0.0.12"},"versions":{"0.0.1":{"name":"msgpack-stream","version":"0.0.1","description":"Stream of msgpack protocol","main":"index.js","scripts":{"test":"node test.js"},"dependencies":{"msgpack-js":"~0.1","through":"~0.0"},"keywords":["msgpack","stream","pipe","frame"],"author":{"name":"Dominic Tarr","email":"dominic.tarr@gmail.com","url":"dominictarr.com"},"license":"MIT","devDependencies":{},"repository":{"type":"git","url":"git://github.com/dominictarr/msgpack-stream.git"},"_id":"msgpack-stream@0.0.1","dist":{"shasum":"26ba446c4498e1a7890d2d2eef3abe626f29d453","tarball":"http://registry.npmjs.org/msgpack-stream/-/msgpack-stream-0.0.1.tgz"},"readme":"","maintainers":[{"name":"dominictarr","email":"dominic.tarr@gmail.com"}],"directories":{}},"0.0.2":{"name":"msgpack-stream","version":"0.0.2","description":"Stream of msgpack protocol","main":"index.js","scripts":{"test":"node test.js"},"dependencies":{"msgpack-js":"~0.1","through":"~0.0"},"keywords":["msgpack","stream","pipe","frame"],"author":{"name":"Dominic Tarr","email":"dominic.tarr@gmail.com","url":"dominictarr.com"},"license":"MIT","devDependencies":{},"repository":{"type":"git","url":"git://github.com/dominictarr/msgpack-stream.git"},"readme":"#MsgPackStream\n\nStreams of framed [msgpack](http://msgpack.org) messages.\n\n## WARNING\n\nthis module is *not recommended* parsing `msgpack` in js is much slower\nthan spliting json into lines and parsing with `JSON.parse`, which is heavily\noptimised in all good js implementations.\n\ninstead use: [es.parse](https://github.com/dominictarr/event-stream#parse) and [es.stringify](https://github.com/dominictarr/event-stream#stringify)\n\nIf you really want to use `msgpack` you should fix this issue: [pgreiss/node-msgpack#16](https://github.com/pgriess/node-msgpack/issues/16)\n\n## usage\n\n``` js\n\nvar mps = require('msgpack-stream')\n\nvar encode = mps.createEncodeStream()\nvar decode = mps.createDecodeStream()\n\nencode.pipe(decode)\n\ndecode.on('data', console.log)\n\nencode.write('HELLO')\nencode.write({object: true})\nencode.write(true)\nencode.write(AnyValidJsObject) //!\n```\n\n## remarks\n\nthis is mostly pulled out of [smith](https://github.com/c9/smith) and slightly refactored to fit a stream.\n\n## lies\n\nActually, msgpack does not support much loved js objects such as `Infinity`, or `Nan`. \n\nOn the other hand, `msgpack-stream` uses [creationix/msgpack-js](https://github.com/creationix/msgpack-js) which implements a slightly extended protocol, so you can pack `Buffer` and `undefined`\n","readmeFilename":"readme.markdown","_id":"msgpack-stream@0.0.2","dist":{"shasum":"d4ab04aec4877b3a3c4cd68f0f514bb264e20dd8","tarball":"http://registry.npmjs.org/msgpack-stream/-/msgpack-stream-0.0.2.tgz"},"_from":".","_npmVersion":"1.2.3","_npmUser":{"name":"dominictarr","email":"dominic.tarr@gmail.com"},"maintainers":[{"name":"dominictarr","email":"dominic.tarr@gmail.com"}],"directories":{}},"0.0.3":{"name":"msgpack-stream","version":"0.0.3","description":"Stream of msgpack protocol","main":"index.js","scripts":{"test":"node test.js"},"dependencies":{"through":"~0.0","msgpack-browserify":"0.0.0"},"keywords":["msgpack","stream","pipe","frame"],"author":{"name":"Dominic Tarr","email":"dominic.tarr@gmail.com","url":"dominictarr.com"},"license":"MIT","devDependencies":{},"repository":{"type":"git","url":"git://github.com/dominictarr/msgpack-stream.git"},"readme":"#MsgPackStream\n\nStreams of framed [msgpack](http://msgpack.org) messages.\n\n## WARNING\n\nthis module is *not recommended* parsing `msgpack` in js is much slower\nthan spliting json into lines and parsing with `JSON.parse`, which is heavily\noptimised in all good js implementations.\n\ninstead use: [es.parse](https://github.com/dominictarr/event-stream#parse) and [es.stringify](https://github.com/dominictarr/event-stream#stringify)\n\nIf you really want to use `msgpack` you should fix this issue: [pgreiss/node-msgpack#16](https://github.com/pgriess/node-msgpack/issues/16)\n\n## usage\n\n``` js\n\nvar mps = require('msgpack-stream')\n\nvar encode = mps.createEncodeStream()\nvar decode = mps.createDecodeStream()\n\nencode.pipe(decode)\n\ndecode.on('data', console.log)\n\nencode.write('HELLO')\nencode.write({object: true})\nencode.write(true)\nencode.write(AnyValidJsObject) //!\n```\n\n## remarks\n\nthis is mostly pulled out of [smith](https://github.com/c9/smith) and slightly refactored to fit a stream.\n\n## lies\n\nActually, msgpack does not support much loved js objects such as `Infinity`, or `Nan`. \n\nOn the other hand, `msgpack-stream` uses [creationix/msgpack-js](https://github.com/creationix/msgpack-js) which implements a slightly extended protocol, so you can pack `Buffer` and `undefined`\n","readmeFilename":"readme.markdown","_id":"msgpack-stream@0.0.3","dist":{"shasum":"dd12c19564cbcbaa89161642d3caf47cd426438b","tarball":"http://registry.npmjs.org/msgpack-stream/-/msgpack-stream-0.0.3.tgz"},"_from":".","_npmVersion":"1.2.18","_npmUser":{"name":"dominictarr","email":"dominic.tarr@gmail.com"},"maintainers":[{"name":"dominictarr","email":"dominic.tarr@gmail.com"}],"directories":{}},"0.0.4":{"name":"msgpack-stream","version":"0.0.4","description":"Stream of msgpack protocol","main":"index.js","scripts":{"test":"node test.js"},"dependencies":{"through":"~0.0","msgpack-browserify":"0.0.0","bops":"0.0.6"},"keywords":["msgpack","stream","pipe","frame"],"author":{"name":"Dominic Tarr","email":"dominic.tarr@gmail.com","url":"dominictarr.com"},"license":"MIT","devDependencies":{},"repository":{"type":"git","url":"git://github.com/dominictarr/msgpack-stream.git"},"readme":"#MsgPackStream\n\nStreams of framed [msgpack](http://msgpack.org) messages.\n\n## WARNING\n\nthis module is *not recommended* parsing `msgpack` in js is much slower\nthan spliting json into lines and parsing with `JSON.parse`, which is heavily\noptimised in all good js implementations.\n\ninstead use: [es.parse](https://github.com/dominictarr/event-stream#parse) and [es.stringify](https://github.com/dominictarr/event-stream#stringify)\n\nIf you really want to use `msgpack` you should fix this issue: [pgreiss/node-msgpack#16](https://github.com/pgriess/node-msgpack/issues/16)\n\n## usage\n\n``` js\n\nvar mps = require('msgpack-stream')\n\nvar encode = mps.createEncodeStream()\nvar decode = mps.createDecodeStream()\n\nencode.pipe(decode)\n\ndecode.on('data', console.log)\n\nencode.write('HELLO')\nencode.write({object: true})\nencode.write(true)\nencode.write(AnyValidJsObject) //!\n```\n\n## remarks\n\nthis is mostly pulled out of [smith](https://github.com/c9/smith) and slightly refactored to fit a stream.\n\n## lies\n\nActually, msgpack does not support much loved js objects such as `Infinity`, or `Nan`. \n\nOn the other hand, `msgpack-stream` uses [creationix/msgpack-js](https://github.com/creationix/msgpack-js) which implements a slightly extended protocol, so you can pack `Buffer` and `undefined`\n","readmeFilename":"readme.markdown","bugs":{"url":"https://github.com/dominictarr/msgpack-stream/issues"},"_id":"msgpack-stream@0.0.4","dist":{"shasum":"fe29338b73189eb43baea93479845b8b050445ac","tarball":"http://registry.npmjs.org/msgpack-stream/-/msgpack-stream-0.0.4.tgz"},"_from":".","_npmVersion":"1.2.30","_npmUser":{"name":"dominictarr","email":"dominic.tarr@gmail.com"},"maintainers":[{"name":"dominictarr","email":"dominic.tarr@gmail.com"}],"directories":{}},"0.0.5":{"name":"msgpack-stream","version":"0.0.5","description":"Stream of msgpack protocol","main":"index.js","scripts":{"test":"node test.js"},"dependencies":{"through":"2.3.4","msgpack-browserify":"0.0.0","bops":"0.0.6"},"keywords":["msgpack","stream","pipe","frame"],"author":{"name":"Dominic Tarr","email":"dominic.tarr@gmail.com","url":"dominictarr.com"},"license":"MIT","devDependencies":{},"repository":{"type":"git","url":"git://github.com/dominictarr/msgpack-stream.git"},"readme":"#MsgPackStream\n\nStreams of framed [msgpack](http://msgpack.org) messages.\n\n## WARNING\n\nthis module is *not recommended* parsing `msgpack` in js is much slower\nthan spliting json into lines and parsing with `JSON.parse`, which is heavily\noptimised in all good js implementations.\n\ninstead use: [es.parse](https://github.com/dominictarr/event-stream#parse) and [es.stringify](https://github.com/dominictarr/event-stream#stringify)\n\nIf you really want to use `msgpack` you should fix this issue: [pgreiss/node-msgpack#16](https://github.com/pgriess/node-msgpack/issues/16)\n\n## usage\n\n``` js\n\nvar mps = require('msgpack-stream')\n\nvar encode = mps.createEncodeStream()\nvar decode = mps.createDecodeStream()\n\nencode.pipe(decode)\n\ndecode.on('data', console.log)\n\nencode.write('HELLO')\nencode.write({object: true})\nencode.write(true)\nencode.write(AnyValidJsObject) //!\n```\n\n## remarks\n\nthis is mostly pulled out of [smith](https://github.com/c9/smith) and slightly refactored to fit a stream.\n\n## lies\n\nActually, msgpack does not support much loved js objects such as `Infinity`, or `Nan`. \n\nOn the other hand, `msgpack-stream` uses [creationix/msgpack-js](https://github.com/creationix/msgpack-js) which implements a slightly extended protocol, so you can pack `Buffer` and `undefined`\n","readmeFilename":"readme.markdown","bugs":{"url":"https://github.com/dominictarr/msgpack-stream/issues"},"_id":"msgpack-stream@0.0.5","dist":{"shasum":"a2aabc751770b5174136733e64b10e4ff8762a37","tarball":"http://registry.npmjs.org/msgpack-stream/-/msgpack-stream-0.0.5.tgz"},"_from":".","_npmVersion":"1.2.30","_npmUser":{"name":"dominictarr","email":"dominic.tarr@gmail.com"},"maintainers":[{"name":"dominictarr","email":"dominic.tarr@gmail.com"}],"directories":{}},"0.0.6":{"name":"msgpack-stream","version":"0.0.6","description":"Stream of msgpack protocol","main":"index.js","scripts":{"test":"node test.js"},"dependencies":{"through":"2.3.4","msgpack-browserify":"0.0.0","bops":"0.0.6"},"keywords":["msgpack","stream","pipe","frame"],"author":{"name":"Dominic Tarr","email":"dominic.tarr@gmail.com","url":"dominictarr.com"},"license":"MIT","devDependencies":{"tape":"~1.0.4"},"repository":{"type":"git","url":"git://github.com/dominictarr/msgpack-stream.git"},"testling":{"files":"test/*.js","browsers":["ie/8..latest","firefox/17..latest","firefox/nightly","chrome/22..latest","chrome/canary","opera/12..latest","opera/next","safari/5.1..latest","ipad/6.0..latest","iphone/6.0..latest","android-browser/4.2..latest"]},"readme":"#MsgPackStream\n\nStreams of framed [msgpack](http://msgpack.org) messages.\n\n## WARNING\n\nthis module is *not recommended* parsing `msgpack` in js is much slower\nthan spliting json into lines and parsing with `JSON.parse`, which is heavily\noptimised in all good js implementations.\n\ninstead use: [es.parse](https://github.com/dominictarr/event-stream#parse) and [es.stringify](https://github.com/dominictarr/event-stream#stringify)\n\nIf you really want to use `msgpack` you should fix this issue: [pgreiss/node-msgpack#16](https://github.com/pgriess/node-msgpack/issues/16)\n\n## usage\n\n``` js\n\nvar mps = require('msgpack-stream')\n\nvar encode = mps.createEncodeStream()\nvar decode = mps.createDecodeStream()\n\nencode.pipe(decode)\n\ndecode.on('data', console.log)\n\nencode.write('HELLO')\nencode.write({object: true})\nencode.write(true)\nencode.write(AnyValidJsObject) //!\n```\n\n## remarks\n\nthis is mostly pulled out of [smith](https://github.com/c9/smith) and slightly refactored to fit a stream.\n\n## lies\n\nActually, msgpack does not support much loved js objects such as `Infinity`, or `Nan`. \n\nOn the other hand, `msgpack-stream` uses [creationix/msgpack-js](https://github.com/creationix/msgpack-js) which implements a slightly extended protocol, so you can pack `Buffer` and `undefined`\n","readmeFilename":"readme.markdown","bugs":{"url":"https://github.com/dominictarr/msgpack-stream/issues"},"_id":"msgpack-stream@0.0.6","dist":{"shasum":"62ecc98a2e6fc0c9361e8c33f4b3421dd85af166","tarball":"http://registry.npmjs.org/msgpack-stream/-/msgpack-stream-0.0.6.tgz"},"_from":".","_npmVersion":"1.3.0","_npmUser":{"name":"dominictarr","email":"dominic.tarr@gmail.com"},"maintainers":[{"name":"dominictarr","email":"dominic.tarr@gmail.com"}],"directories":{}},"0.0.7":{"name":"msgpack-stream","version":"0.0.7","description":"Stream of msgpack protocol","main":"index.js","scripts":{"test":"node test.js"},"dependencies":{"through":"2.3.4","msgpack-browserify":"0.0.0","bops":"0.0.6"},"keywords":["msgpack","stream","pipe","frame"],"author":{"name":"Dominic Tarr","email":"dominic.tarr@gmail.com","url":"dominictarr.com"},"license":"MIT","devDependencies":{"tape":"~1.0.4"},"repository":{"type":"git","url":"git://github.com/dominictarr/msgpack-stream.git"},"testling":{"files":"test/*.js","browsers":["ie/8..latest","firefox/17..latest","firefox/nightly","chrome/22..latest","chrome/canary","opera/12..latest","opera/next","safari/5.1..latest","ipad/6.0..latest","iphone/6.0..latest","android-browser/4.2..latest"]},"readme":"#MsgPackStream\n\nStreams of framed [msgpack](http://msgpack.org) messages.\n\n[![testling badge](https://ci.testling.com/dominictarr/msgpack-stream.png)](https://ci.testling.com/dominictarr/msgpack-stream)\n\n## WARNING\n\nthis module is *not recommended* parsing `msgpack` in js is much slower\nthan spliting json into lines and parsing with `JSON.parse`, which is heavily\noptimised in all good js implementations.\n\ninstead use: [es.parse](https://github.com/dominictarr/event-stream#parse) and [es.stringify](https://github.com/dominictarr/event-stream#stringify)\n\nIf you really want to use `msgpack` you should fix this issue: [pgreiss/node-msgpack#16](https://github.com/pgriess/node-msgpack/issues/16)\n\n## usage\n\n``` js\n\nvar mps = require('msgpack-stream')\n\nvar encode = mps.createEncodeStream()\nvar decode = mps.createDecodeStream()\n\nencode.pipe(decode)\n\ndecode.on('data', console.log)\n\nencode.write('HELLO')\nencode.write({object: true})\nencode.write(true)\nencode.write(AnyValidJsObject) //!\n```\n\n## remarks\n\nthis is mostly pulled out of [smith](https://github.com/c9/smith) and slightly refactored to fit a stream.\n\n## lies\n\nActually, msgpack does not support much loved js objects such as `Infinity`, or `Nan`. \n\nOn the other hand, `msgpack-stream` uses [creationix/msgpack-js](https://github.com/creationix/msgpack-js) which implements a slightly extended protocol, so you can pack `Buffer` and `undefined`\n","readmeFilename":"readme.markdown","bugs":{"url":"https://github.com/dominictarr/msgpack-stream/issues"},"_id":"msgpack-stream@0.0.7","dist":{"shasum":"2dac8a3c06ab6d27b17d69bc4bfbf9367a41f2bf","tarball":"http://registry.npmjs.org/msgpack-stream/-/msgpack-stream-0.0.7.tgz"},"_from":".","_npmVersion":"1.3.0","_npmUser":{"name":"dominictarr","email":"dominic.tarr@gmail.com"},"maintainers":[{"name":"dominictarr","email":"dominic.tarr@gmail.com"}],"directories":{}},"0.0.8":{"name":"msgpack-stream","version":"0.0.8","description":"Stream of msgpack protocol","main":"index.js","scripts":{"test":"node test.js"},"dependencies":{"through":"2.3.4","msgpack":"git://github.com/dominictarr/msgpack-js.git","bops":"0.0.6"},"keywords":["msgpack","stream","pipe","frame"],"author":{"name":"Dominic Tarr","email":"dominic.tarr@gmail.com","url":"dominictarr.com"},"license":"MIT","devDependencies":{"tape":"~1.0.4"},"repository":{"type":"git","url":"git://github.com/dominictarr/msgpack-stream.git"},"testling":{"files":"test/*.js","browsers":["ie/8..latest","firefox/17..latest","firefox/nightly","chrome/22..latest","chrome/canary","opera/12..latest","opera/next","safari/5.1..latest","ipad/6.0..latest","iphone/6.0..latest","android-browser/4.2..latest"]},"readme":"#MsgPackStream\n\nStreams of framed [msgpack](http://msgpack.org) messages.\n\n[![testling badge](https://ci.testling.com/dominictarr/msgpack-stream.png)](https://ci.testling.com/dominictarr/msgpack-stream)\n\n## WARNING\n\nthis module is *not recommended* parsing `msgpack` in js is much slower\nthan spliting json into lines and parsing with `JSON.parse`, which is heavily\noptimised in all good js implementations.\n\ninstead use: [es.parse](https://github.com/dominictarr/event-stream#parse) and [es.stringify](https://github.com/dominictarr/event-stream#stringify)\n\nIf you really want to use `msgpack` you should fix this issue: [pgreiss/node-msgpack#16](https://github.com/pgriess/node-msgpack/issues/16)\n\n## usage\n\n``` js\n\nvar mps = require('msgpack-stream')\n\nvar encode = mps.createEncodeStream()\nvar decode = mps.createDecodeStream()\n\nencode.pipe(decode)\n\ndecode.on('data', console.log)\n\nencode.write('HELLO')\nencode.write({object: true})\nencode.write(true)\nencode.write(AnyValidJsObject) //!\n```\n\n## remarks\n\nthis is mostly pulled out of [smith](https://github.com/c9/smith) and slightly refactored to fit a stream.\n\n## lies\n\nActually, msgpack does not support much loved js objects such as `Infinity`, or `Nan`. \n\nOn the other hand, `msgpack-stream` uses [creationix/msgpack-js](https://github.com/creationix/msgpack-js) which implements a slightly extended protocol, so you can pack `Buffer` and `undefined`\n","readmeFilename":"readme.markdown","bugs":{"url":"https://github.com/dominictarr/msgpack-stream/issues"},"_id":"msgpack-stream@0.0.8","dist":{"shasum":"3679ddfaf1e51aa99a93280038ab25431cb267de","tarball":"http://registry.npmjs.org/msgpack-stream/-/msgpack-stream-0.0.8.tgz"},"_from":".","_npmVersion":"1.3.0","_npmUser":{"name":"dominictarr","email":"dominic.tarr@gmail.com"},"maintainers":[{"name":"dominictarr","email":"dominic.tarr@gmail.com"}],"directories":{}},"0.0.9":{"name":"msgpack-stream","version":"0.0.9","description":"Stream of msgpack protocol","main":"index.js","scripts":{"test":"node test.js"},"dependencies":{"through":"2.3.4","msgpack-js":"git://github.com/dominictarr/msgpack-js.git","bops":"0.0.6"},"keywords":["msgpack","stream","pipe","frame"],"author":{"name":"Dominic Tarr","email":"dominic.tarr@gmail.com","url":"dominictarr.com"},"license":"MIT","devDependencies":{"tape":"~1.0.4"},"repository":{"type":"git","url":"git://github.com/dominictarr/msgpack-stream.git"},"testling":{"files":"test/*.js","browsers":["ie/8..latest","firefox/17..latest","firefox/nightly","chrome/22..latest","chrome/canary","opera/12..latest","opera/next","safari/5.1..latest","ipad/6.0..latest","iphone/6.0..latest","android-browser/4.2..latest"]},"readme":"#MsgPackStream\n\nStreams of framed [msgpack](http://msgpack.org) messages.\n\n[![testling badge](https://ci.testling.com/dominictarr/msgpack-stream.png)](https://ci.testling.com/dominictarr/msgpack-stream)\n\n## WARNING\n\nthis module is *not recommended* parsing `msgpack` in js is much slower\nthan spliting json into lines and parsing with `JSON.parse`, which is heavily\noptimised in all good js implementations.\n\ninstead use: [es.parse](https://github.com/dominictarr/event-stream#parse) and [es.stringify](https://github.com/dominictarr/event-stream#stringify)\n\nIf you really want to use `msgpack` you should fix this issue: [pgreiss/node-msgpack#16](https://github.com/pgriess/node-msgpack/issues/16)\n\n## usage\n\n``` js\n\nvar mps = require('msgpack-stream')\n\nvar encode = mps.createEncodeStream()\nvar decode = mps.createDecodeStream()\n\nencode.pipe(decode)\n\ndecode.on('data', console.log)\n\nencode.write('HELLO')\nencode.write({object: true})\nencode.write(true)\nencode.write(AnyValidJsObject) //!\n```\n\n## remarks\n\nthis is mostly pulled out of [smith](https://github.com/c9/smith) and slightly refactored to fit a stream.\n\n## lies\n\nActually, msgpack does not support much loved js objects such as `Infinity`, or `Nan`. \n\nOn the other hand, `msgpack-stream` uses [creationix/msgpack-js](https://github.com/creationix/msgpack-js) which implements a slightly extended protocol, so you can pack `Buffer` and `undefined`\n","readmeFilename":"readme.markdown","bugs":{"url":"https://github.com/dominictarr/msgpack-stream/issues"},"_id":"msgpack-stream@0.0.9","dist":{"shasum":"3c3834024d28ee6654aa81ba2f162e06d18bf9fb","tarball":"http://registry.npmjs.org/msgpack-stream/-/msgpack-stream-0.0.9.tgz"},"_from":".","_npmVersion":"1.3.0","_npmUser":{"name":"dominictarr","email":"dominic.tarr@gmail.com"},"maintainers":[{"name":"dominictarr","email":"dominic.tarr@gmail.com"}],"directories":{}},"0.0.10":{"name":"msgpack-stream","version":"0.0.10","description":"Stream of msgpack protocol","main":"index.js","scripts":{"test":"node test.js"},"dependencies":{"through":"2.3.4","msgpack-js":"git://github.com/dominictarr/msgpack-js.git","bops":"0.0.6"},"keywords":["msgpack","stream","pipe","frame"],"author":{"name":"Dominic Tarr","email":"dominic.tarr@gmail.com","url":"dominictarr.com"},"license":"MIT","devDependencies":{"tape":"~1.0.4"},"repository":{"type":"git","url":"git://github.com/dominictarr/msgpack-stream.git"},"testling":{"files":"test/*.js","browsers":["ie/8..latest","firefox/17..latest","firefox/nightly","chrome/22..latest","chrome/canary","opera/12..latest","opera/next","safari/5.1..latest","ipad/6.0..latest","iphone/6.0..latest","android-browser/4.2..latest"]},"readme":"#MsgPackStream\n\nStreams of framed [msgpack](http://msgpack.org) messages.\n\n[![testling badge](https://ci.testling.com/dominictarr/msgpack-stream.png)](https://ci.testling.com/dominictarr/msgpack-stream)\n\n## WARNING\n\nthis module is *not recommended* parsing `msgpack` in js is much slower\nthan spliting json into lines and parsing with `JSON.parse`, which is heavily\noptimised in all good js implementations.\n\ninstead use: [es.parse](https://github.com/dominictarr/event-stream#parse) and [es.stringify](https://github.com/dominictarr/event-stream#stringify)\n\nIf you really want to use `msgpack` you should fix this issue: [pgreiss/node-msgpack#16](https://github.com/pgriess/node-msgpack/issues/16)\n\n## usage\n\n``` js\n\nvar mps = require('msgpack-stream')\n\nvar encode = mps.createEncodeStream()\nvar decode = mps.createDecodeStream()\n\nencode.pipe(decode)\n\ndecode.on('data', console.log)\n\nencode.write('HELLO')\nencode.write({object: true})\nencode.write(true)\nencode.write(AnyValidJsObject) //!\n```\n\n## remarks\n\nthis is mostly pulled out of [smith](https://github.com/c9/smith) and slightly refactored to fit a stream.\n\n## lies\n\nActually, msgpack does not support much loved js objects such as `Infinity`, or `Nan`. \n\nOn the other hand, `msgpack-stream` uses [creationix/msgpack-js](https://github.com/creationix/msgpack-js) which implements a slightly extended protocol, so you can pack `Buffer` and `undefined`\n","readmeFilename":"readme.markdown","bugs":{"url":"https://github.com/dominictarr/msgpack-stream/issues"},"_id":"msgpack-stream@0.0.10","dist":{"shasum":"7e05b794f6a31677b5d697a1fef86d352d82b890","tarball":"http://registry.npmjs.org/msgpack-stream/-/msgpack-stream-0.0.10.tgz"},"_from":".","_npmVersion":"1.3.0","_npmUser":{"name":"dominictarr","email":"dominic.tarr@gmail.com"},"maintainers":[{"name":"dominictarr","email":"dominic.tarr@gmail.com"}],"directories":{}},"0.0.11":{"name":"msgpack-stream","version":"0.0.11","description":"Stream of msgpack protocol","main":"index.js","scripts":{"test":"node test.js"},"dependencies":{"through":"2.3.4","msgpack-js":"0.3.0","bops":"0.0.6"},"keywords":["msgpack","stream","pipe","frame"],"author":{"name":"Dominic Tarr","email":"dominic.tarr@gmail.com","url":"dominictarr.com"},"license":"MIT","devDependencies":{"tape":"~1.0.4"},"repository":{"type":"git","url":"git://github.com/dominictarr/msgpack-stream.git"},"testling":{"files":"test.js","browsers":["ie/8..latest","firefox/17..latest","firefox/nightly","chrome/22..latest","chrome/canary","opera/12..latest","opera/next","safari/5.1..latest","ipad/6.0..latest","iphone/6.0..latest","android-browser/4.2..latest"]},"readme":"#MsgPackStream\n\nStreams of framed [msgpack](http://msgpack.org) messages.\n\n[![testling badge](https://ci.testling.com/dominictarr/msgpack-stream.png)](https://ci.testling.com/dominictarr/msgpack-stream)\n\n## WARNING\n\nthis module is *not recommended* parsing `msgpack` in js is much slower\nthan spliting json into lines and parsing with `JSON.parse`, which is heavily\noptimised in all good js implementations.\n\ninstead use: [es.parse](https://github.com/dominictarr/event-stream#parse) and [es.stringify](https://github.com/dominictarr/event-stream#stringify)\n\nIf you really want to use `msgpack` you should fix this issue: [pgreiss/node-msgpack#16](https://github.com/pgriess/node-msgpack/issues/16)\n\n## usage\n\n``` js\n\nvar mps = require('msgpack-stream')\n\nvar encode = mps.createEncodeStream()\nvar decode = mps.createDecodeStream()\n\nencode.pipe(decode)\n\ndecode.on('data', console.log)\n\nencode.write('HELLO')\nencode.write({object: true})\nencode.write(true)\nencode.write(AnyValidJsObject) //!\n```\n\n## remarks\n\nthis is mostly pulled out of [smith](https://github.com/c9/smith) and slightly refactored to fit a stream.\n\n## lies\n\nActually, msgpack does not support much loved js objects such as `Infinity`, or `Nan`. \n\nOn the other hand, `msgpack-stream` uses [creationix/msgpack-js](https://github.com/creationix/msgpack-js) which implements a slightly extended protocol, so you can pack `Buffer` and `undefined`\n","readmeFilename":"readme.markdown","bugs":{"url":"https://github.com/dominictarr/msgpack-stream/issues"},"_id":"msgpack-stream@0.0.11","dist":{"shasum":"b6cf57f189ad59b683091422af3f145af258980f","tarball":"http://registry.npmjs.org/msgpack-stream/-/msgpack-stream-0.0.11.tgz"},"_from":".","_npmVersion":"1.3.0","_npmUser":{"name":"dominictarr","email":"dominic.tarr@gmail.com"},"maintainers":[{"name":"dominictarr","email":"dominic.tarr@gmail.com"}],"directories":{}},"0.0.12":{"name":"msgpack-stream","version":"0.0.12","description":"Stream of msgpack protocol","main":"index.js","scripts":{"test":"node test.js"},"dependencies":{"through":"2.3.4","msgpack-js":"0.3.0","bops":"0.0.6"},"keywords":["msgpack","stream","pipe","frame"],"author":{"name":"Dominic Tarr","email":"dominic.tarr@gmail.com","url":"dominictarr.com"},"license":"MIT","devDependencies":{"tape":"~1.0.4"},"repository":{"type":"git","url":"git://github.com/dominictarr/msgpack-stream.git"},"testling":{"files":"test.js","browsers":["ie/8..latest","firefox/17..latest","firefox/nightly","chrome/22..latest","chrome/canary","opera/12..latest","opera/next","safari/5.1..latest","ipad/6.0..latest","iphone/6.0..latest","android-browser/4.2..latest"]},"readme":"#MsgPackStream\n\nStreams of framed [msgpack](http://msgpack.org) messages.\n\n[![testling badge](https://ci.testling.com/dominictarr/msgpack-stream.png)](https://ci.testling.com/dominictarr/msgpack-stream)\n\n## WARNING\n\nthis module is *not recommended* parsing `msgpack` in js is much slower\nthan spliting json into lines and parsing with `JSON.parse`, which is heavily\noptimised in all good js implementations.\n\ninstead use: [es.parse](https://github.com/dominictarr/event-stream#parse) and [es.stringify](https://github.com/dominictarr/event-stream#stringify)\n\nIf you really want to use `msgpack` you should fix this issue: [pgreiss/node-msgpack#16](https://github.com/pgriess/node-msgpack/issues/16)\n\n## usage\n\n``` js\n\nvar mps = require('msgpack-stream')\n\nvar encode = mps.createEncodeStream()\nvar decode = mps.createDecodeStream()\n\nencode.pipe(decode)\n\ndecode.on('data', console.log)\n\nencode.write('HELLO')\nencode.write({object: true})\nencode.write(true)\nencode.write(AnyValidJsObject) //!\n```\n\n## remarks\n\nthis is mostly pulled out of [smith](https://github.com/c9/smith) and slightly refactored to fit a stream.\n\n## lies\n\nActually, msgpack does not support much loved js objects such as `Infinity`, or `Nan`. \n\nOn the other hand, `msgpack-stream` uses [creationix/msgpack-js](https://github.com/creationix/msgpack-js) which implements a slightly extended protocol, so you can pack `Buffer` and `undefined`\n","readmeFilename":"readme.markdown","bugs":{"url":"https://github.com/dominictarr/msgpack-stream/issues"},"_id":"msgpack-stream@0.0.12","dist":{"shasum":"28897d16cd7c0a7901eee16b9b6039d42e2fcc97","tarball":"http://registry.npmjs.org/msgpack-stream/-/msgpack-stream-0.0.12.tgz"},"_from":".","_npmVersion":"1.3.11","_npmUser":{"name":"dominictarr","email":"dominic.tarr@gmail.com"},"maintainers":[{"name":"dominictarr","email":"dominic.tarr@gmail.com"}],"directories":{}}},"readme":"","maintainers":[{"name":"dominictarr","email":"dominic.tarr@gmail.com"}],"time":{"modified":"2013-11-12T12:08:48.128Z","created":"2012-07-14T01:35:25.007Z","0.0.1":"2012-07-14T01:49:45.279Z","0.0.2":"2013-03-07T10:21:53.203Z","0.0.3":"2013-05-06T00:43:40.126Z","0.0.4":"2013-06-19T10:05:07.167Z","0.0.5":"2013-06-22T18:05:43.183Z","0.0.6":"2013-07-22T09:19:21.977Z","0.0.7":"2013-07-22T09:26:16.738Z","0.0.8":"2013-07-22T12:00:07.584Z","0.0.9":"2013-07-22T12:03:36.379Z","0.0.10":"2013-07-22T13:13:51.573Z","0.0.11":"2013-07-26T10:50:19.137Z","0.0.12":"2013-11-12T12:08:48.128Z"},"author":{"name":"Dominic Tarr","email":"dominic.tarr@gmail.com","url":"dominictarr.com"},"repository":{"type":"git","url":"git://github.com/dominictarr/msgpack-stream.git"},"_attachments":{},"_etag":"\"3NR6F54I4D2T7Z61DMUEJK9U0\""}