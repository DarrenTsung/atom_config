(function() {
  var CompositeDisposable, ConfigPlus;

  CompositeDisposable = require('atom').CompositeDisposable;

  ConfigPlus = (function() {
    ConfigPlus.prototype.disposables = null;

    function ConfigPlus(scope, config) {
      this.scope = scope;
      this.config = config;
    }

    ConfigPlus.prototype.get = function(param) {
      return atom.config.get(this.scope + "." + param);
    };

    ConfigPlus.prototype.set = function(param, value) {
      return atom.config.set(this.scope + "." + param, value);
    };

    ConfigPlus.prototype.toggle = function(param, options) {
      if (options == null) {
        options = {};
      }
      this.set(param, !this.get(param));
      if (options.log != null) {
        return this.log(param);
      }
    };

    ConfigPlus.prototype.log = function(param) {
      return console.log(this.scope + "." + param + ": " + (this.get(param)));
    };

    ConfigPlus.prototype.onDidChange = function(param, callback) {
      if (this.disposables == null) {
        this.disposables = new CompositeDisposable;
      }
      return this.disposables.add(atom.config.onDidChange(this.scope + "." + param, callback));
    };

    ConfigPlus.prototype.dispose = function() {
      var ref;
      return (ref = this.disposables) != null ? ref.dispose() : void 0;
    };

    return ConfigPlus;

  })();

  module.exports = ConfigPlus;

}).call(this);
