{
  "name": "lazy-motion",
  "main": "./lib/main",
  "version": "0.1.2",
  "description": "Rapid cursor positioning with fuzzy search",
  "keywords": [],
  "repository": {
    "type": "git",
    "url": "https://github.com/t9md/atom-lazy-motion"
  },
  "license": "MIT",
  "engines": {
    "atom": ">=1.0.0 <2.0.0"
  },
  "activationCommands": {
    "atom-text-editor": [
      "lazy-motion:forward",
      "lazy-motion:backward"
    ]
  },
  "dependencies": {
    "fuzzaldrin": "^2.1.0",
    "underscore-plus": "^1.6.6"
  },
  "readme": "# lazy-motion\n\nRapid cursor positioning with **fuzzy**, **lazy** search.\n\n![gif](https://raw.githubusercontent.com/t9md/t9md/3379ed41ea6fd3725245f5d37b3bb36f7e9b0683/img/atom-lazy-motion.gif)\n\n# Feature\n\n* Search word within buffer with fuzzy search by [fuzzaldrin](https://github.com/atom/fuzzaldrin).\n* Display `current / total` match count in input panel and hover indicator.\n* Incrementally scroll(visit) to matched position.\n* Don't change cursor position unless you confirm(important for [cursor-history](https://atom.io/packages/cursor-history) like pakcage).\n* Differentiate color for top(blue) and bottom(red) entry of matches.\n* Highlight original cursor position while searching and flash current matching.\n* Flash screen if no match.\n\n# Why\n\nLets say you are editing over 200 lines of CoffeeScript file.  \nAnd you want to go to line where code `@container?.destroy()` is to change it.  \n\nWith lazy-motion, you can reach target in following way.\n\n1. Invoke `lazy-motion:forward` from keymap.\n2. Input `c?d` to input panel.\n3. `core:confirm` to land or `core:cancel` to cancel.\n\n## Other examples\n* `ca)` to reach line containing `cancel()`.\n* `gemade` to reach line containing `@flashingDecoration?.getMarker().destroy()`.\n\nLike the example above you can reach target position with very lazy and fuzzy key type.\n\n## Why *label jump* approach not worked for me.\n\nUntil now I released [vim-smalls](https://github.com/t9md/vim-smalls/blob/master/README-JP.md) and its [Atom port](https://github.com/t9md/atom-smalls).  \n\nAnd also hacked [jumpy](https://github.com/t9md/jumpy) and [vim-easymotion](https://github.com/t9md/vim-easymotion) as exercise to create  smalls.  \n\nBut as for me this *label jump* system not work, I couldn't adapt to it.  \n\nThe reason is simple.  \n\nThe *label jump* constrains me to enter label precisely which result in my focus(or zone or flow) lost.  \n\nOf course this *label jump* packages let me reach target position with minimum key typing.  \nBut in my opinion, its only good for demonstration.\n\nIn real world coding, the **brain context switch** the *label jump* enforces is **too expensive** to use on a daily basis.  \n\n# Commands\n\n### atom-text-editor\n* `lazy-motion:forward`: Search forward.\n* `lazy-motion:backward`: Search backward.\n* `core:confirm`: confirm.\n* `core:cancel`:  cancel.\n\n*NOTE: Search always wrap from end-to-top or top-to-end.*\n\n# Configuration\n\n* `autoLand`: Automatically land(confirm) if there is no other candidates.\n* `minimumInputLength`: Search start only when input length exceeds this value.\n* `wordRegExp`: Used to build candidate word list.\n* `showHoverIndicator`: Show hover indicator while searching.\n\n# Keymap\n\nNo keymap by default.  \nYou need to set your own keymap in `keymap.cson`.\n\n```coffeescript\n'atom-text-editor':\n  'ctrl-s':     'lazy-motion:forward'\n  'ctrl-cmd-r': 'lazy-motion:backward'\n\n'atom-text-editor.lazy-motion':\n  ']': 'lazy-motion:forward'\n  '[': 'lazy-motion:backward'\n```\n\n* Emacs user\n\n```coffeescript\n'atom-text-editor':\n  'ctrl-s': 'lazy-motion:forward'\n  'ctrl-r': 'lazy-motion:backward'\n\n'.platform-darwin atom-text-editor.lazy-motion':\n  'ctrl-s': 'lazy-motion:forward'\n  'ctrl-r': 'lazy-motion:backward'\n  'ctrl-g': 'core:cancel'\n```\n\n* My setting\n\n```coffeescript\n'atom-text-editor.vim-mode.command-mode':\n  's': 'lazy-motion:search-forward'\n\n'.platform-darwin atom-text-editor.lazy-motion[mini]':\n  ']':      'lazy-motion:forward'\n  '[':      'lazy-motion:backward'\n  ';':      'core:confirm'\n  'ctrl-g': 'core:cancel'\n```\n\n# Limitation\n\nSlow in large buffer.  \n\nTried to pre-generate candidate by `observeTexitEditors` but its not work.  \nEditing buffer with huge merkers is very slow.  \nSo create marker on `lazy-motion` start and destroy on finish is better than that.  \n\n# Language specific `wordRegExp` configuration.\n\nYou can specify `wordRegExp` configuration per language.  \n\nSee [Scoped Settings, Scopes and Scope Descriptors](https://atom.io/docs/latest/behind-atom-scoped-settings-scopes-and-scope-descriptors) and [API/Config](https://atom.io/docs/api/latest/Config) for details.\n\n* in your `config.cson`.\n```coffeescript\n\"*\": # This is global scope. Used as default.\n  # <snip>\n  \"lazy-motion\":\n    wordRegExp: 'xxxx'\n  # <snip>\n\".go.source\": # This is Go specific,\n  \"lazy-motion\":\n    wordRegExp: 'xxxx'\n```\n\n# TODO\n- [ ] Restore fold if canceled.\n- [x] Support language specific `wordRegExp` configuration.\n- [x] Show hover indicator to inform `current / total`.\n- [x] `AutoLand` if there is no other candidate.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/t9md/atom-lazy-motion/issues"
  },
  "homepage": "https://github.com/t9md/atom-lazy-motion",
  "_id": "lazy-motion@0.1.2",
  "_shasum": "27c1dcb3af898b315daad57f9c4a0b6dde8f0a72",
  "_resolved": "file:../d-115613-99246-akpfda/package.tgz",
  "_from": "../d-115613-99246-akpfda/package.tgz",
  "_atomModuleCache": {
    "version": 1,
    "dependencies": [
      {
        "name": "fuzzaldrin",
        "version": "2.1.0",
        "path": "node_modules/fuzzaldrin/lib/fuzzaldrin.js"
      },
      {
        "name": "underscore-plus",
        "version": "1.6.6",
        "path": "node_modules/underscore-plus/lib/underscore-plus.js"
      },
      {
        "name": "underscore",
        "version": "1.6.0",
        "path": "node_modules/underscore-plus/node_modules/underscore/underscore.js"
      }
    ],
    "extensions": {
      ".coffee": [
        "lib/candidate-provider.coffee",
        "lib/hover-indicator.coffee",
        "lib/main.coffee",
        "lib/match.coffee",
        "lib/ui.coffee"
      ],
      ".js": [
        "node_modules/fuzzaldrin/lib/filter.js",
        "node_modules/fuzzaldrin/lib/fuzzaldrin.js",
        "node_modules/fuzzaldrin/lib/matcher.js",
        "node_modules/fuzzaldrin/lib/scorer.js",
        "node_modules/underscore-plus/lib/underscore-plus.js",
        "node_modules/underscore-plus/node_modules/underscore/underscore-min.js",
        "node_modules/underscore-plus/node_modules/underscore/underscore.js"
      ],
      ".json": [
        "node_modules/fuzzaldrin/package.json",
        "node_modules/underscore-plus/node_modules/underscore/package.json",
        "node_modules/underscore-plus/package.json",
        "package.json"
      ]
    },
    "folders": [
      {
        "paths": [
          "lib",
          ""
        ],
        "dependencies": {
          "fuzzaldrin": "^2.1.0",
          "underscore-plus": "^1.6.6"
        }
      },
      {
        "paths": [
          "node_modules/underscore-plus/lib",
          "node_modules/underscore-plus"
        ],
        "dependencies": {
          "underscore": "~1.6.0"
        }
      }
    ]
  }
}